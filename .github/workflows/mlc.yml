# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# GH actions.
# We use it to cover windows and mac builds
# Jenkins is still the primary CI

name: CI

on:
  push:
    branches:
      - mlc
  pull_request:
    branches:
      - mlc
  workflow_dispatch:

concurrency:
  group: CI-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  MacOS:
    if: ${{ github.repository == 'mlc-ai/relax' }}
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: conda/build-environment.yaml
          condarc-file: conda/condarc
      - name: Conda info
        shell: bash -l {0}
        run: |
          $MAMBA_EXE info
          $MAMBA_EXE list
      - name: Build package
        shell: bash -l {0}
        run: |
          rm -rf config.cmake build && mkdir -p build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_OSX_DEPLOYMENT_TARGET=10.13 \
                -DUSE_RPC=ON \
                -DUSE_LLVM=ON \
                -DUSE_LIBBACKTRACE=AUTO \
                -DUSE_METAL=ON \
                ..
          cmake --build . --parallel $(nproc)
          cd ..
      - name: Test
        shell: bash -l {0}
        run: >-
          python -m pytest -v tests/python/all-platform-minimal-test
      - name: Build iOS RPC
        shell: bash -l {0}
        run: |
          rm -rf config.cmake build-ios-simulator && mkdir build-ios-simulator && cd build-ios-simulator
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_SYSTEM_NAME=iOS \
                -DCMAKE_SYSTEM_VERSION=14.0 \
                -DCMAKE_OSX_SYSROOT=iphonesimulator \
                -DCMAKE_OSX_ARCHITECTURES=x86_64 \
                -DCMAKE_OSX_DEPLOYMENT_TARGET=14.0 \
                -DCMAKE_BUILD_WITH_INSTALL_NAME_DIR=ON \
                -DUSE_IOS_RPC=ON \
                ..
          cmake --build . --parallel $(nproc) --target ios_rpc
          cd ..
      - name: Test iOS RPC
        shell: bash -l {0}
        run: |
          python -m pip install tornado psutil cloudpickle
          export PYTHONPATH=tests/python/contrib:${PYTHONPATH}
          export BUNDLE_ID=org.apache.tvmrpc
          export BUNDLE_PATH=build-ios-simulator/apps/ios_rpc/ios_rpc/src/ios_rpc-build/Release-iphonesimulator/tvmrpc.app
          python -m pytest -v tests/python/contrib/test_rpc_server_device.py

  Windows:
    if: ${{ github.repository == 'mlc-ai/relax' }}
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: conda/build-environment.yaml
          condarc-file: conda/condarc
      - name: Conda info
        shell: cmd /C call {0}
        run: |
          $MAMBA_EXE info
          $MAMBA_EXE list
      - name: Conda Build
        shell: cmd /C call {0}
        run: |
          rd /s /q build
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" ^
                -DUSE_LLVM=ON ^
                -DUSE_RPC=ON ^
                -DUSE_CPP_RPC=ON ^
                ..
          cmake --build . --parallel 3 --config Release -- /m
          cd ..
      - name: Test
        shell: cmd /C call {0}
        run: >-
          python -m pytest -v tests/python/all-platform-minimal-test
